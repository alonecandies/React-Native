{"ast":null,"code":"var _jsxFileName = \"E:\\\\expo\\\\dzlogin\\\\app-devzone\\\\routes\\\\homeNavigation.js\";\nimport React from 'react';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\nimport Posts from \"../screens/posts\";\nimport Bookmark from \"../screens/bookmark\";\nimport Notification from \"../screens/notification\";\nimport Categories from \"../screens/categories\";\nimport Information from \"../screens/info\";\nimport Category from \"../screens/category\";\nimport Post from \"../screens/post\";\nvar Tab = createBottomTabNavigator();\nvar postStack = createStackNavigator();\nvar bookmarkStack = createStackNavigator();\nvar notificationStack = createStackNavigator();\nvar categoryStack = createStackNavigator();\n\nfunction postStackScreen() {\n  return React.createElement(postStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, React.createElement(postStack.Screen, {\n    name: \"Posts\",\n    component: Posts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }), React.createElement(postStack.Screen, {\n    name: \"Post\",\n    component: Post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }));\n}\n\nfunction bookmarkStackScreen() {\n  return React.createElement(postStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, React.createElement(postStack.Screen, {\n    name: \"Bookmark\",\n    component: Bookmark,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), React.createElement(postStack.Screen, {\n    name: \"Post\",\n    component: Post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }));\n}\n\nfunction notificationStackScreen() {\n  return React.createElement(postStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, React.createElement(postStack.Screen, {\n    name: \"Notification\",\n    component: Notification,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), React.createElement(postStack.Screen, {\n    name: \"Post\",\n    component: Post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }));\n}\n\nfunction categoryStackScreen() {\n  return React.createElement(postStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, React.createElement(postStack.Screen, {\n    name: \"Categories\",\n    component: Categories,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }), React.createElement(postStack.Screen, {\n    name: \"Category\",\n    component: Category,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default function HomeTab() {\n  var _this = this;\n\n  return React.createElement(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          if (route.name === \"Post\") {\n            iconName = focused ? 'ios-home' : 'ios-home-outline';\n          } else if (route.name === 'Bookmark') {\n            iconName = focused ? 'ios-bookmarks' : 'ios-bookmarks-outline';\n          } else if (route.name === 'Notification') {\n            iconName = focused ? 'ios-notifications' : 'ios-notifications-outline';\n          } else if (route.name === 'Category') {\n            iconName = \"ios-albums\";\n          } else if (route.name === 'Infomation') {\n            iconName = focused ? 'information-circle' : 'information-circle-outline';\n          }\n\n          return React.createElement(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 32\n            }\n          });\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: 'black',\n      inactiveTintColor: 'gray'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Post\",\n    component: postStackScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Bookmark\",\n    component: bookmarkStackScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Notification\",\n    component: notificationStackScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Category\",\n    component: categoryStackScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Information\",\n    component: Information,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }));\n}","map":{"version":3,"sources":["E:/expo/dzlogin/app-devzone/routes/homeNavigation.js"],"names":["React","createStackNavigator","createBottomTabNavigator","Ionicons","Posts","Bookmark","Notification","Categories","Information","Category","Post","Tab","postStack","bookmarkStack","notificationStack","categoryStack","postStackScreen","bookmarkStackScreen","notificationStackScreen","categoryStackScreen","HomeTab","route","tabBarIcon","focused","color","size","iconName","name","activeTintColor","inactiveTintColor"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {createStackNavigator} from '@react-navigation/stack';\r\nimport {createBottomTabNavigator} from '@react-navigation/bottom-tabs';\r\nimport Ionicons from 'react-native-vector-icons/Ionicons';\r\nimport Posts from '../screens/posts';\r\nimport Bookmark from '../screens/bookmark';\r\nimport Notification from '../screens/notification';\r\nimport Categories from '../screens/categories';\r\nimport Information from '../screens/info';\r\nimport Category from '../screens/category';\r\nimport Post from '../screens/post';\r\n\r\nconst Tab = createBottomTabNavigator();\r\nconst postStack = createStackNavigator();\r\nconst bookmarkStack = createStackNavigator();\r\nconst notificationStack = createStackNavigator();\r\nconst categoryStack = createStackNavigator();\r\n\r\nfunction postStackScreen() {\r\n    return (\r\n        <postStack.Navigator>\r\n            <postStack.Screen name=\"Posts\" component={Posts}/>\r\n            <postStack.Screen name=\"Post\" component={Post}/>\r\n        </postStack.Navigator>\r\n    )\r\n}\r\n\r\nfunction bookmarkStackScreen() {\r\n    return (\r\n        <postStack.Navigator>\r\n            <postStack.Screen name=\"Bookmark\" component={Bookmark}/>\r\n            <postStack.Screen name=\"Post\" component={Post}/>\r\n        </postStack.Navigator>\r\n    )\r\n}\r\n\r\nfunction notificationStackScreen() {\r\n    return (\r\n        <postStack.Navigator>\r\n            <postStack.Screen name=\"Notification\" component={Notification}/>\r\n            <postStack.Screen name=\"Post\" component={Post}/>\r\n        </postStack.Navigator>\r\n    )\r\n}\r\n\r\nfunction categoryStackScreen() {\r\n    return (\r\n        <postStack.Navigator>\r\n            <postStack.Screen name=\"Categories\" component={Categories}/>\r\n            <postStack.Screen name=\"Category\" component={Category}/>\r\n        </postStack.Navigator>\r\n    )\r\n}\r\n\r\nexport default function HomeTab() {\r\n    return (\r\n            <Tab.Navigator\r\n                screenOptions={({route})=>({\r\n                    tabBarIcon:({focused,color,size}) => {\r\n                        let iconName;\r\n                        if (route.name===\"Post\") {\r\n                            iconName=focused?'ios-home':'ios-home-outline';\r\n                        }\r\n                        else if (route.name ==='Bookmark'){\r\n                            iconName = focused?'ios-bookmarks':'ios-bookmarks-outline';\r\n                        }\r\n                        else if (route.name ==='Notification'){\r\n                            iconName = focused?'ios-notifications':'ios-notifications-outline';\r\n                        }\r\n                        else if (route.name ==='Category'){\r\n                            iconName = \"ios-albums\";\r\n                        }\r\n                        else if (route.name ==='Infomation'){\r\n                            iconName = focused?'information-circle':'information-circle-outline';\r\n                        }\r\n                        return <Ionicons name={iconName} size={size} color={color} />;\r\n                    },\r\n                })}\r\n                tabBarOptions={{\r\n                    activeTintColor:'black',\r\n                    inactiveTintColor:'gray'\r\n                }}\r\n            >\r\n                <Tab.Screen name=\"Post\" component={postStackScreen}/>\r\n                <Tab.Screen name=\"Bookmark\" component={bookmarkStackScreen}/>\r\n                <Tab.Screen name=\"Notification\" component={notificationStackScreen}/>\r\n                <Tab.Screen name=\"Category\" component={categoryStackScreen}/>\r\n                <Tab.Screen name=\"Information\" component={Information}/>\r\n            </Tab.Navigator>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}